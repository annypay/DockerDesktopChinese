/**
 * Forward events
 * @deprecated :warning: It will be removed in a future version. Use {@link forwardEventsStream} instead.
 * @param recv
 * @param callback
 */

export function forwardEvents(
  recv: MessagePort,
  callback: (data: any, error: any) => void,
) {
  // eslint-disable-next-line no-param-reassign
  recv.onmessage = ({ data }) => {
    if (data.stdout) {
      callback(
        {
          stdout: String.fromCharCode.apply(
            null,
            // @ts-ignore hush typescript, everything is fine
            new Uint16Array(data.stdout),
          ),
        },
        null,
      );
    }

    if (data.stderr) {
      // @ts-ignore hush typescript, everything is fine
      callback(
        {
          stderr: String.fromCharCode.apply(
            null,
            // @ts-ignore hush typescript, everything is fine
            new Uint16Array(data.stderr),
          ),
        },
        null,
      );
    }

    if (data.close) {
      callback({ code: data.code }, null);
    }
  };

  // eslint-disable-next-line no-param-reassign
  recv.onmessageerror = (e) => {
    callback(null, e);
  };
}
