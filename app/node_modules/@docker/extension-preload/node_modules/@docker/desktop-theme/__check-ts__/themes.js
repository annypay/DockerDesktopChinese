import { alpha } from '@mui/material/styles';
import { colors } from './colors';
import { dockerDarkPalette, dockerLightPalette } from './docker-color-palettes';
import { composeThemeOptionsFromLayers, } from './composeThemeOptionsFromLayers';
function createCommonPaletteOptions(pal) {
    const text = {
        primary: pal.text,
        secondary: pal.grey[600],
        disabled: pal.grey[500],
    };
    return {
        text,
        primary: {
            light: '#6BC3F3',
            main: colors.marine50,
            dark: '#096BD4',
        },
        secondary: {
            main: '#E12B0C',
            dark: '#871907',
        },
        action: {
            hover: alpha(pal.grey[400], 0.4),
            hoverOpacity: 0.4,
            // setting the "selected" color seems to have mixed impact. e.g. the
            // "hover" color is used when rendering menus, but only the selectedOpacity
            // is used (the color appears to always be the primary one)
            selected: alpha(pal.grey[400], 0.4),
            selectedOpacity: 0.3,
            active: text.secondary,
            disabled: text.disabled,
        },
    };
}
// Font weights as defined in the design system https://www.figma.com/file/YrCXp3zztpwtcSD9XVge7Z/%E2%9C%A8Foundations?node-id=723%3A4025
const fontWeights = {
    regular: 400,
    medium: 500,
    semibold: 600,
};
/**
 * This layer specifies various custom options that we've defined
 * via module augmentation. It's not used when supplying MUI config
 * to extensions.
 */
function getCustomThemeOptions(getTheme) {
    const theme = getTheme();
    return {
        mixins: mixins(theme.palette),
        typography: {
            /* Typography styles as defined in the design system https://www.figma.com/file/YrCXp3zztpwtcSD9XVge7Z/%E2%9C%A8Foundations?node-id=723%3A4025 */
            h1_ds: {
                fontSize: '36px',
                fontWeight: fontWeights.semibold,
                letterSpacing: '-1.5%',
                lineHeight: '40px',
            },
            h2_ds: {
                fontSize: '24px',
                fontWeight: fontWeights.regular,
                lineHeight: '32px',
            },
            h3_ds: {
                fontSize: '18px',
                fontWeight: fontWeights.semibold,
                lineHeight: '24px',
            },
            subtitle_ds: {
                fontSize: '16px',
                fontWeight: fontWeights.regular,
                lineHeight: '16px',
            },
            body1_ds: {
                fontSize: '14px',
                fontWeight: fontWeights.regular,
                lineHeight: '24px',
            },
            body2_ds: {
                fontSize: '12px',
                fontWeight: fontWeights.regular,
                lineHeight: '16px',
            },
            button_ds: {
                fontSize: '14px',
                fontWeight: fontWeights.semibold,
                lineHeight: '16px',
            },
            caption_ds: {
                fontSize: '12px',
                fontWeight: fontWeights.regular,
                lineHeight: '16px',
                textTransform: 'uppercase',
            },
            'inline-code': {
                fontFamily: 'ui-monospace,Courier,monospace',
                backgroundColor: theme.palette.type === 'dark'
                    ? theme.palette.docker.grey[300]
                    : theme.palette.docker.grey[200],
                padding: '.2em .4em',
                fontSize: '85%',
                borderRadius: '4px',
            },
        },
        components: {
            MuiAppBar: {
                styleOverrides: {
                    colorPrimary: {
                        backgroundColor: theme.palette.images.headerBackgroundColor,
                    },
                },
            },
        },
    };
}
/**
 * This layer specifies various options, but only ones that exist
 * in base MUI. Custom properties - i.e. ones that we've added via
 * module augmentation - should not appear here, or be referenced here.
 */
function getStandardThemeOptions(themeName, palette) {
    return (getTheme) => {
        const baseTheme = getTheme();
        const typography = {
            fontFamily: '"Open SansVariable", "Helvetica Neue", sans-serif',
            fontSize: 12,
            subtitle1: {
                fontSize: 16,
            },
            body1: {
                fontSize: 14,
            },
            subtitle2: {
                fontSize: 22,
                fontWeight: 600,
            },
            fontWeightRegular: fontWeights.regular,
            fontWeightMedium: fontWeights.medium,
            fontWeightBold: fontWeights.semibold,
        };
        return {
            typography,
            breakpoints: {
                values: {
                    sm: 640,
                    md: 1024,
                    lg: 1280,
                },
            },
            components: {
                MuiDataGrid: {
                    styleOverrides: {
                        root: {
                            border: 'none',
                        },
                        row: {
                            cursor: 'pointer',
                            fontSize: 14,
                            '&:hover': {
                                backgroundColor: themeName === 'dark' ? '#303E46' : colors.white5, // Should '#303E46' be a palette color?
                            },
                        },
                        cell: {
                            borderColor: themeName === 'dark' ? palette.grey[500] : palette.grey[300],
                        },
                        columnHeaders: {
                            textTransform: 'uppercase',
                            borderColor: themeName === 'dark' ? palette.grey[500] : palette.grey[300],
                        },
                    },
                },
                MuiDivider: {
                    styleOverrides: {
                        root: {
                            borderColor: themeName === 'dark'
                                ? alpha('#ffffff', 0.1)
                                : alpha(colors.black0, 0.1),
                        },
                    },
                },
                MuiCard: {
                    styleOverrides: {
                        root: {
                            borderRadius: '4px !important',
                            borderColor: themeName === 'dark' ? palette.grey[400] : palette.grey[100],
                            backgroundColor: themeName === 'dark' ? palette.grey[200] : '#ffffff',
                            '&:hover': {
                                boxShadow: themeName === 'dark'
                                    ? '0px 2px 8px 4px rgba(0, 0, 0, 0.4)'
                                    : '0px 2px 8px 4px rgba(0, 0, 0, 0.1)', // 0.2 was on the Figma file but it's too dark
                            },
                        },
                    },
                },
                MuiCardActions: {
                    styleOverrides: {
                        // default is 8px, but is 16px in design system
                        root: {
                            padding: baseTheme.spacing(2),
                        },
                    },
                },
                MuiButton: {
                    styleOverrides: {
                        root: {
                            textTransform: 'initial',
                            fontWeight: 600,
                        },
                        contained: {
                            boxShadow: 'none',
                            '&:hover, &:focus': {
                                boxShadow: 'none',
                            },
                            '&.Mui-disabled': {
                                color: themeName === 'dark'
                                    ? alpha('#ffffff', 0.3)
                                    : alpha(colors.black0, 0.3),
                                backgroundColor: themeName === 'dark'
                                    ? alpha('#ffffff', 0.1)
                                    : alpha(colors.black0, 0.1),
                            },
                        },
                        outlined: {
                            // outlined buttons have white text in the design system:
                            // https://www.figma.com/file/R0GyrsN8tRxJIbti0KY6S3/?node-id=7%3A12
                            color: themeName === 'dark' ? '#fff' : undefined,
                        },
                        outlinedPrimary: {
                            border: `1px solid ${baseTheme.palette.primary.main}`,
                        },
                        outlinedSecondary: {
                            border: `1px solid ${baseTheme.palette.secondary.main}`,
                            '&.Mui-disabled': {
                                color: themeName === 'dark'
                                    ? alpha('#ffffff', 0.3)
                                    : alpha(colors.black0, 0.3),
                                borderColor: themeName === 'dark'
                                    ? alpha('#ffffff', 0.1)
                                    : alpha(colors.black0, 0.1),
                            },
                        },
                    },
                },
                MuiIconButton: {
                    styleOverrides: {
                        root: {
                            transition: 'color 0.3s ease-out',
                            '&:hover': {
                                backgroundColor: 'transparent',
                            },
                        },
                    },
                },
                MuiCheckbox: {
                    defaultProps: {
                        disableRipple: true,
                    },
                    styleOverrides: {
                        root: {
                            paddingTop: 4,
                            paddingBottom: 4,
                        },
                        colorPrimary: {
                            '&:hover': {
                                backgroundColor: 'transparent',
                            },
                            '&$checked': {
                                '&:hover': {
                                    backgroundColor: 'transparent',
                                },
                            },
                        },
                    },
                },
                MuiSwitch: {
                    styleOverrides: {
                        colorPrimary: {
                            '&:hover': {
                                backgroundColor: 'transparent',
                            },
                            '&$checked': {
                                '&:hover': {
                                    backgroundColor: 'transparent',
                                },
                            },
                        },
                    },
                },
                MuiListItem: {
                    styleOverrides: {
                        root: {
                            paddingTop: 6,
                            paddingBottom: 6,
                            '&$selected': {
                                backgroundColor: alpha(baseTheme.palette.primary.light, 0.2),
                            },
                        },
                        button: {
                            '&:hover': {
                                backgroundColor: alpha(baseTheme.palette.primary.light, 0.1),
                            },
                        },
                    },
                },
                MuiTooltip: {
                    styleOverrides: {
                        tooltip: {
                            fontSize: '10px',
                            lineHeight: '13px',
                            letterSpacing: '1px',
                            textTransform: 'uppercase',
                            color: 'white',
                            backgroundColor: themeName === 'dark' ? '#5C6972' : '#2F3B43',
                        },
                    },
                },
                MuiListItemIcon: {
                    styleOverrides: {
                        root: {
                            minWidth: 36,
                        },
                    },
                },
                MuiMenu: {
                    styleOverrides: {
                        paper: {
                            background: themeName === 'dark' ? '#303E46' : colors.white5,
                            boxShadow: 'none',
                        },
                    },
                },
                MuiMenuItem: {
                    styleOverrides: {
                        root: {
                            minHeight: 'auto',
                            '&:focus': {
                                '& .MuiListItemIcon-root, & .MuiListItemText-primary': {
                                    color: themeName === 'dark' ? '#ffffff' : colors.black0,
                                },
                            },
                        },
                        gutters: {
                            fontSize: typography.body1.fontSize,
                        },
                    },
                },
                MuiRadio: {
                    styleOverrides: {
                        root: {
                            paddingTop: 4,
                            paddingBottom: 4,
                        },
                    },
                },
                MuiFilledInput: {
                    styleOverrides: {
                        root: {
                            borderRadius: '0 !important',
                            backgroundColor: themeName === 'dark' ? alpha('#ffffff', 0.09) : '#ECECEC',
                            '&:focus, &:hover': {
                                backgroundColor: themeName === 'dark' ? alpha('#ffffff', 0.13) : '#E4E4E4',
                            },
                        },
                        underline: {
                            '&:after': {
                                borderBottomColor: baseTheme.palette.primary.main,
                            },
                        },
                    },
                },
                MuiOutlinedInput: {
                    styleOverrides: {
                        notchedOutline: {
                            borderColor: themeName === 'dark'
                                ? '#555D61 !important'
                                : `${alpha('#000000', 0.23)} !important`,
                            borderWidth: '1px !important',
                        },
                        root: {
                            '&$disabled': {
                                backgroundColor: themeName === 'dark' ? '#2C373E' : '#EFEFEF',
                                borderRadius: '4px',
                            },
                        },
                    },
                },
                MuiPaper: {
                    styleOverrides: {
                        root: {
                            borderRadius: '0 !important',
                        },
                    },
                },
                MuiList: {
                    styleOverrides: {
                        root: {
                            paddingTop: '0 !important',
                            paddingBottom: '0 !important',
                        },
                    },
                },
                MuiTableRow: {
                    styleOverrides: {
                        hover: {
                            backgroundColor: 'transparent !important',
                        },
                    },
                },
                MuiDialog: {
                    styleOverrides: {
                        paperScrollPaper: {
                            backgroundColor: themeName === 'dark' ? undefined : '#ffffff',
                        },
                    },
                },
                MuiDialogActions: {
                    styleOverrides: {
                        // See design system
                        // https://www.figma.com/file/R0GyrsN8tRxJIbti0KY6S3/%E2%9C%A8Components-%26-Patterns?node-id=105%3A6595
                        root: {
                            padding: baseTheme.spacing(2),
                        },
                    },
                },
                MuiButtonBase: {
                    defaultProps: {
                        disableRipple: true,
                    },
                },
                MuiTab: {
                    styleOverrides: {
                        root: {
                            textTransform: 'none',
                            fontSize: 14,
                        },
                    },
                },
            },
        };
    };
}
/**
 * This layer just returns properties that exist on the basic
 * MUI theme object.
 */
function getStandardDarkPaletteOptions(palette) {
    return () => {
        const common = createCommonPaletteOptions(palette);
        return {
            palette: {
                ...common,
                // mode: "dark",
                background: {
                    default: '#202C33',
                    paper: '#202C33',
                },
            },
        };
    };
}
/**
 * This layer specifies custom palette properties
 */
function getCustomDarkPaletteOptions(getTheme) {
    const theme = getTheme();
    return {
        palette: {
            type: 'dark',
            background: {
                secondary: '#313F47',
                header: '#27343B',
                footer: '#27343B',
                hover: '#303E46',
                mask: alpha('#202C33', 0.2),
                highlighted: '#313F47',
            },
            status: {
                running: colors.green50,
                starting: colors.orange60,
                error: colors.red60,
                stopped: '#5A5A5A',
                creation: colors.blue20,
            },
            icon: {
                fill: '#415058',
                fillHover: '#5C6970',
                white: '#ffffff',
                action: colors.marine50,
                actionDisabled: '#4A5568',
                actionHover: '#6BC3F3',
            },
            tab: {
                icon: '#ffffff',
                hover: alpha('#6BC3F3', 0.101),
                selected: alpha('#6BC3F3', 0.2),
            },
            log: {
                backgroundColor: theme.palette.docker.background,
                footerColor: '#202C33',
                textColor: theme.palette.text.secondary,
            },
            split: {
                color: alpha('#ffffff', 0.121),
            },
            title: {
                color: theme.palette.text.primary,
                secondaryColor: theme.palette.text.secondary,
            },
            command: {
                backgroundColor: '#0D1214',
                color: '#6BC3F3',
            },
            dashboardTable: {
                backgroundHover: '#303E46',
            },
            whale: '#ffffff',
            instruction: {
                color: '#C9D2D8',
                statsColor: '#606060',
                background: '#313F47',
                success: '#23CC7B',
                buttonColor: '#099CEC',
                buttonColorHover: '#0083CD',
                successSecondaryText: '#8A9399',
                successContainerBackground: '#2C3A42',
                successContainerShadow: `0px 0px 33px ${alpha('#000000', 0.31)}`,
                successTooltipBackground: '#313F47',
                successTooltipTitle: '#C9D2D8',
            },
            images: {
                titleColor: '#ffffff',
                headerTextColor: '#CCCCCC',
                primaryText: '#ffffff',
                secondaryText: theme.palette.text.secondary,
                hoverColor: '#303E46',
                headerBackgroundColor: '#27343B',
                headerDeletionBackgroundColor: '#27343B',
                greyBackgroundColor: '#27343B',
                historyBlue: colors.blue50,
                remoteBackgroundColor: '#27343B',
            },
            dashboardNavigationPanel: {
                backgroundColor: '#14222B',
            },
            containerCreation: {
                backgroundColorInput: '#354046',
                bottomColorInput: colors.grey60,
                containerColor: colors.blue60,
                nameColor: '#ffffff',
                backgroundColor: '#2A343A',
            },
            upgradeBtn: {
                backgroundColor: '#5C6971',
                backgroundColorHover: '#7F8A90',
            },
            trayMenu: {
                hoverBackground: '#176AC1',
            },
            devEnvGettingStarted: {
                border: `1px solid ${colors.grey40}`,
            },
        },
    };
}
function getDockerPaletteOptions(pal) {
    return () => ({
        palette: {
            docker: pal,
        },
    });
}
/**
 * This layer just returns properties that exist on the basic
 * MUI theme object.
 */
function getStandardLightPaletteOptions(palette) {
    return () => {
        const common = createCommonPaletteOptions(palette);
        return {
            palette: {
                ...common,
                // mode: "light",
                background: {
                    default: '#F4F4F6',
                    paper: '#F4F4F6',
                },
            },
        };
    };
}
/**
 * This layer specifies custom palette properties
 */
function getCustomLightPaletteOptions(getTheme) {
    const theme = getTheme();
    return {
        palette: {
            type: 'light',
            background: {
                secondary: colors.white15,
                header: colors.blue60,
                footer: colors.white5,
                hover: colors.white5,
                mask: alpha('#F4F4F6', 0.2),
                highlighted: colors.white25,
            },
            status: {
                running: colors.green50,
                starting: colors.orange60,
                error: colors.red60,
                stopped: '#C2C2C2',
                creation: colors.blue20,
            },
            icon: {
                fill: '#1182D9',
                fillHover: '#0671C1',
                white: '#ffffff',
                action: colors.marine50,
                actionDisabled: '#D6D6D6',
                actionHover: colors.marine60,
            },
            tab: {
                icon: alpha('#000000', 0.541),
                hover: alpha('#6BC3F3', 0.101),
                selected: alpha('#6BC3F3', 0.2),
            },
            log: {
                backgroundColor: theme.palette.docker.background,
                footerColor: '#F4F4F6',
                textColor: theme.palette.text.secondary,
            },
            split: {
                color: alpha('#000000', 0.121),
            },
            title: {
                color: theme.palette.text.primary,
                secondaryColor: theme.palette.text.secondary,
            },
            command: {
                backgroundColor: '#253138',
                color: '#6BC3F3',
            },
            dashboardTable: {
                backgroundHover: '#ffffff',
            },
            whale: colors.blue60,
            instruction: {
                color: '#6F777C',
                statsColor: '#BBBBBB',
                background: '#E0E0E0',
                success: '#11A661',
                buttonColor: '#099CEC',
                buttonColorHover: '#0083CD',
                successSecondaryText: '#8A9399',
                successContainerBackground: '#ffffff',
                successContainerShadow: `0px 0px 13px ${alpha('#000000', 0.11)}`,
                successTooltipBackground: '#E5E5E7',
                successTooltipTitle: '#4F4F4F',
            },
            images: {
                titleColor: '#ffffff',
                headerTextColor: '#CCCCCC',
                primaryText: '#27343B',
                secondaryText: theme.palette.text.secondary,
                hoverColor: '#ffffff',
                headerBackgroundColor: '#32545F',
                headerDeletionBackgroundColor: colors.white15,
                greyBackgroundColor: colors.white15,
                historyBlue: colors.blue50,
                remoteBackgroundColor: colors.white15,
            },
            dashboardNavigationPanel: {
                backgroundColor: colors.white25,
            },
            containerCreation: {
                backgroundColorInput: '#ffffff',
                bottomColorInput: colors.grey30,
                containerColor: colors.blue20,
                nameColor: '#000000',
                backgroundColor: '#F1F3F4',
            },
            upgradeBtn: {
                backgroundColor: colors.marine20,
                backgroundColorHover: '#4DA9FD',
            },
            trayMenu: {
                hoverBackground: '#2D91FB',
            },
            devEnvGettingStarted: {
                border: `1px solid ${colors.grey40}`,
            },
        },
    };
}
const mixins = (pal) => ({
    checkboxDescription: {
        marginLeft: 28,
        color: pal.text.secondary,
    },
    customScrollBar: {
        neutral: {
            '&::-webkit-scrollbar': {
                width: '8px',
            },
            '&::-webkit-scrollbar-track': {
                boxShadow: 'none',
            },
            '&::-webkit-scrollbar-thumb': {
                visibility: 'hidden',
                backgroundColor: pal.docker.grey[500],
                borderRadius: '4px',
            },
        },
        whenHovered: {
            '&::-webkit-scrollbar-thumb': {
                visibility: 'visible',
            },
        },
    },
    tables: {
        customDataGrid: {
            '& .MuiDataGrid-columnHeaderTitle': {
                fontWeight: 600,
            },
        },
    },
    iconButtons: {
        primaryColorOnHover: {
            ':hover': {
                color: 'primary.main',
            },
        },
    },
});
function getExtensionsOptions(mainAppThemeOptions) {
    function assumeIsObjectStyleOptions(typographyOptions) {
        if (typeof typographyOptions === 'function') {
            // TODO: Log a bugsnag error here
            return undefined;
        }
        return typographyOptions;
    }
    const typographyOptions = assumeIsObjectStyleOptions(mainAppThemeOptions.typography);
    return () => ({
        typography: {
            // unlike the main app, extensions don't have to support our old
            // design choices; let them use the design system typography directly
            h1: typographyOptions?.h1_ds,
            h2: typographyOptions?.h2_ds,
            h3: typographyOptions?.h3_ds,
            'inline-code': typographyOptions?.['inline-code'],
        },
        components: {
            MuiCssBaseline: {
                styleOverrides: `body { padding: 16px 32px; }`,
            },
        },
    });
}
export const appThemes = {
    dark: composeThemeOptionsFromLayers([
        getStandardDarkPaletteOptions(dockerDarkPalette),
        getStandardThemeOptions('dark', dockerDarkPalette),
        getDockerPaletteOptions(dockerDarkPalette),
        getCustomDarkPaletteOptions,
        getCustomThemeOptions,
    ]),
    light: composeThemeOptionsFromLayers([
        getStandardLightPaletteOptions(dockerLightPalette),
        getStandardThemeOptions('light', dockerLightPalette),
        getDockerPaletteOptions(dockerLightPalette),
        getCustomLightPaletteOptions,
        getCustomThemeOptions,
    ]),
};
/** Some proto-themes, not yet hydrated, for injecting into extensions */
export const extensionThemes = {
    dark: composeThemeOptionsFromLayers([
        getStandardDarkPaletteOptions(dockerDarkPalette),
        getStandardThemeOptions('dark', dockerDarkPalette),
        getDockerPaletteOptions(dockerDarkPalette),
        getExtensionsOptions(appThemes.dark),
    ]),
    light: composeThemeOptionsFromLayers([
        getStandardLightPaletteOptions(dockerLightPalette),
        getStandardThemeOptions('light', dockerLightPalette),
        getDockerPaletteOptions(dockerLightPalette),
        getExtensionsOptions(appThemes.light),
    ]),
};
//# sourceMappingURL=themes.js.map